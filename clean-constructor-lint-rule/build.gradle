apply plugin: "kotlin"
apply plugin: 'com.jfrog.bintray'
apply plugin: "com.jfrog.artifactory"
apply plugin: "org.sonarqube"
apply plugin: 'jacoco'

def libVersion = '1.4.6'
group 'com.github.grishberg'
version libVersion

ext {
    PUBLISH_GROUP_ID = group
    PUBLISH_ARTIFACT_ID = 'clean-constructor-lint-rule'
    PUBLISH_VERSION = version
}

dependencies {
    compileOnly 'com.android.tools.lint:lint:26.4.2'
    compileOnly 'com.android.tools.lint:lint-api:26.4.2'
    compileOnly 'com.android.tools.lint:lint-checks:26.4.2'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.31"
    testImplementation "com.android.tools.lint:lint:26.4.2"
    testImplementation "com.android.tools.lint:lint-tests:26.4.2"

    compileOnly 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    compileOnly 'com.github.dcendents:android-maven-gradle-plugin:2.1'
}

sourceCompatibility = "8"
targetCompatibility = "8"

jar {
    manifest {
        attributes("Lint-Registry-v2": "com.github.grishberg.cleanconstructorlintplugin.CleanConstructorsRegistry")
    }
}


// need to call  ./gradlew clean build generateRelease
apply from: 'publish.gradle'

apply plugin: 'maven-publish'
// ./gradlew publishToMavenLocal
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}


jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

tasks.sonarqube.dependsOn jacocoTestReport

test {
    jacoco {
        append = true
        includeNoLocationClasses = true
    }
}

apply from: 'sonar.gradle'